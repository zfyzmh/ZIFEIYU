@using ZFY.ChatGpt.Dto;
@using ZIFEIYU.Global;
@using ZIFEIYU.Services;

@foreach (var item in Messages)
{
    @if (item.Role == "assistant")
    {
        <div style="display:flex;   ">
            <div style=" margin-bottom: 10px; padding: 10px; max-width: 80%">

                <MudCard Style="display:inline-block">
                    <MudCardContent>
                        <div style="position: relative;">
                            @if (IsMarkdown)
                            {
                                @if (!IsCodeOver)
                                {
                                <MudMarkdown CodeBlockTheme="@CodeBlockTheme" Value="@item.Content" />
                                }
                                else
                                {
                                @((MarkupString)GetMarkdown(item.Content))
                                }
                            }else
                            {
                                @item.Content
                            }
                        </div>
                    </MudCardContent>
                </MudCard>
                <MudIconButton OnClick="async ()=>{ await SpeechServices.PlayVoice(item.Content);}" Icon="@Icons.Material.Filled.VoiceChat"></MudIconButton>
            </div>
           
        </div>
    }
    else if (item.Role == "user")
    {
        <div style="display:flex;" dir="rtl">
            <div dir="ltr" style="word-wrap: break-word;  margin-bottom: 10px; padding: 10px; max-width: 80%">
                <MudCard>
                    <MudCardContent>
                        @item.Content
                        @*<MudMarkdown CodeBlockTheme="@CodeBlockTheme" Value="@item.Content" />*@
                    </MudCardContent>
                </MudCard>
            </div>
          
        </div>
    }
}
<style>
    p {
        margin-top: 0;
        margin-bottom: 0;
    }
</style>
@code {
    [Parameter]
    public List<ChatMessage> Messages { get; set; }
    [Parameter]
    public bool IsMarkdown { get; set; }
    [Parameter]
    public bool IsCodeOver { get; set; }

    [Inject] public SpeechServices SpeechServices { get; set; }


    public CodeBlockTheme CodeBlockTheme { get {
            if ((bool)EventDispatcher.DispatchFunc("IsDarkTheme")) return CodeBlockTheme.Dark;
            else return CodeBlockTheme.Github;
        } }


    public string GetMarkdown(string? tes)
    {
        return Markdig.Markdown.ToHtml(tes ?? string.Empty);
    }
}

